// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using formula_API.Data;

#nullable disable

namespace formula_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250504073606_ChangeStepsData")]
    partial class ChangeStepsData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("formula_API.Models.Formula", b =>
                {
                    b.Property<int>("FormulaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FormulaId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("StepsData")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("FormulaId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Formulas");
                });

            modelBuilder.Entity("formula_API.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CreatedBy = "API",
                            CreatedDate = new DateTime(2025, 5, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Resep jamu untuk obat batuk",
                            ProductCode = "PRD001",
                            ProductName = "Jamu Obat Batuk"
                        },
                        new
                        {
                            ProductId = 2,
                            CreatedBy = "API",
                            CreatedDate = new DateTime(2025, 5, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Resep jamu untuk nyeri haid",
                            ProductCode = "PRD002",
                            ProductName = "Jamu Nyeri Haid"
                        });
                });

            modelBuilder.Entity("formula_API.Models.Formula", b =>
                {
                    b.HasOne("formula_API.Models.Product", "Product")
                        .WithOne("Formula")
                        .HasForeignKey("formula_API.Models.Formula", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("formula_API.Models.Product", b =>
                {
                    b.Navigation("Formula")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
